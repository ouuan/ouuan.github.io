<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术 on ouuan的博客</title><link>https://ouuan.github.io/categories/%E6%8A%80%E6%9C%AF/</link><description>Recent content in 技术 on ouuan的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 10 Oct 2021 09:33:17 +0800</lastBuildDate><atom:link href="https://ouuan.github.io/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 auto-merge 解决 dependabot</title><link>https://ouuan.github.io/post/use-auto-merge-to-conquer-dependabot/</link><pubDate>Sun, 10 Oct 2021 09:33:17 +0800</pubDate><guid>https://ouuan.github.io/post/use-auto-merge-to-conquer-dependabot/</guid><description>&lt;p>用过 dependabot 的同学，尤其是使用着一些更新频繁的依赖的同学，一定都体验过被 dependabot 支配的恐惧。使用 GitHub 的 auto-merge 功能可以很好地解决这一问题。&lt;/p></description></item><item><title>TypeScript 中子类型判定的基本原则，特例，以及相关操作</title><link>https://ouuan.github.io/post/typescript-subtype-principle-exceptions-and-operations/</link><pubDate>Sun, 22 Aug 2021 12:28:25 +0800</pubDate><guid>https://ouuan.github.io/post/typescript-subtype-principle-exceptions-and-operations/</guid><description>&lt;p>类型是 TypeScript 中的基本概念，而两个类型之间是否存在子类型关系则决定了许多操作是否合法。多数类型的相关规则是非常符合直觉的，有些规则是符合逻辑而不一定符合直觉的，而少数规则则是例外。本文试图归纳一下子类型判定的基本原则，特例，以及相关操作。&lt;/p></description></item><item><title>Firefox 的 Tree Style Tab 和 Duplicate Tabs Closer 插件</title><link>https://ouuan.github.io/post/firefox-tree-style-tab-and-duplicate-tabs-closer/</link><pubDate>Thu, 09 Jul 2020 13:00:46 +0800</pubDate><guid>https://ouuan.github.io/post/firefox-tree-style-tab-and-duplicate-tabs-closer/</guid><description>&lt;p>你在使用浏览器时是否有这样的烦恼？&lt;/p>
&lt;ul>
&lt;li>到底开多少个标签页？
&lt;ol>
&lt;li>开很多浏览器标签页 ⇒ 找不到标签页在哪，切换麻烦。&lt;/li>
&lt;li>开很少浏览器标签页 ⇒ 需要频繁地打开、关闭标签页。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>标签页之间层次混乱，不同类别的标签页混在一起。&lt;/li>
&lt;li>从不同的地方点链接打开同一个网址，关了一个忘记关另一个。&lt;/li>
&lt;li>……&lt;/li>
&lt;/ul>
&lt;p>使用 Firefox 的 Tree Style Tab 和 Duplicate Tabs Closer 插件，就可以解决上述烦恼。&lt;/p></description></item><item><title>C++ lambda 使用引用捕获局部变量的陷阱</title><link>https://ouuan.github.io/post/lambda-capture-local-variable-by-reference/</link><pubDate>Wed, 08 Jul 2020 14:08:38 +0800</pubDate><guid>https://ouuan.github.io/post/lambda-capture-local-variable-by-reference/</guid><description>&lt;p>C++ NB $\times$&lt;/p>
&lt;p>C++ UB $\sqrt{}$&lt;/p></description></item><item><title>使用 GitHub Project 创建一份 To Do List</title><link>https://ouuan.github.io/post/use-github-project-to-create-a-to-do-list/</link><pubDate>Sat, 14 Mar 2020 13:14:15 +0800</pubDate><guid>https://ouuan.github.io/post/use-github-project-to-create-a-to-do-list/</guid><description>&lt;p>大家知道我整天在 GitHub 上&lt;del>根本&lt;/del>几乎不做题，那为什么不利用 GitHub 来督促自己做题呢？&lt;/p>
&lt;p>GitHub 的 Projects 功能正好适合这么做。&lt;/p>
&lt;p>&lt;a href="https://github.com/users/ouuan/projects/2">我的 Project&lt;/a>&lt;/p></description></item><item><title>从 Hexo 到 Hugo</title><link>https://ouuan.github.io/post/from-hexo-to-hugo/</link><pubDate>Thu, 06 Feb 2020 23:07:17 +0800</pubDate><guid>https://ouuan.github.io/post/from-hexo-to-hugo/</guid><description>&lt;p>该博客的前身是自 2018 年 12 月搭建的 hexo 博客，于 2020 年 2 月搬迁至 hugo。&lt;/p></description></item><item><title>UOJ 无限 waiting 的解决方法</title><link>https://ouuan.github.io/post/uoj-%E6%97%A0%E9%99%90-waiting-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Thu, 28 Nov 2019 20:10:41 +0800</pubDate><guid>https://ouuan.github.io/post/uoj-%E6%97%A0%E9%99%90-waiting-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;p>本文讲的是自己搭建的 UOJ 如何解决无限 waiting，而不是 &lt;a href="https://uoj.ac">https://uoj.ac&lt;/a> 如何解决无限 waiting（后者大概要联系 vfk..反正我是没遇到过）。&lt;/p></description></item><item><title>UOJ 自动备份</title><link>https://ouuan.github.io/post/uoj-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/</link><pubDate>Fri, 27 Sep 2019 12:01:05 +0800</pubDate><guid>https://ouuan.github.io/post/uoj-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/</guid><description>&lt;p>作为一个刚刚上线两周就回滚了无数次数据的 OJ，备份自然是很重要的~&lt;/p></description></item><item><title>Hinata Online Judge 的搭建</title><link>https://ouuan.github.io/post/hinata-online-judge-%E7%9A%84%E6%90%AD%E5%BB%BA/</link><pubDate>Sat, 21 Sep 2019 21:58:04 +0800</pubDate><guid>https://ouuan.github.io/post/hinata-online-judge-%E7%9A%84%E6%90%AD%E5%BB%BA/</guid><description>&lt;p>程序员就是代码重用的艺术家（&lt;/p></description></item><item><title>一些有趣的小工程</title><link>https://ouuan.github.io/post/%E4%B8%80%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B0%8F%E5%B7%A5%E7%A8%8B/</link><pubDate>Sat, 10 Aug 2019 19:22:23 +0800</pubDate><guid>https://ouuan.github.io/post/%E4%B8%80%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B0%8F%E5%B7%A5%E7%A8%8B/</guid><description>&lt;blockquote>
&lt;p>说实话我觉得竞赛题目挺坑爹的……木有啥意思。人类为何要出题刁难人类。&lt;/p>
&lt;p>我更喜欢做的事情是写点工程啥的 &amp;gt;_&amp;lt;&amp;hellip; 做做小游戏挺好玩的。&lt;/p>
&lt;p>—— vfk 《四色的 NOI》&lt;/p>
&lt;/blockquote>
&lt;p>（&lt;del>这算哪门子引用啊&lt;/del>）&lt;/p></description></item><item><title>C++11 enable_if 的使用</title><link>https://ouuan.github.io/post/c-11-enable-if-%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 03 Jul 2019 01:24:13 +0800</pubDate><guid>https://ouuan.github.io/post/c-11-enable-if-%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;p>今天想更新一下自己的 &lt;a href="https://github.com/ouuan/CF-template">CF 模板&lt;/a>，然后发现由于写法问题可能要给每种整型（int，long，long long，unsigned int，unsigned long long……）分别定义函数，于是尝试搜了一下有没有什么好的代码重用方式，发现了 enable_if，还挺好用的，但去网上搜教程可能比较难学..我乱搞了两三个小时才学会。于是就来分享一下..&lt;/p></description></item><item><title>使用 testlib.h 写 lemon SPJ</title><link>https://ouuan.github.io/post/%E4%BD%BF%E7%94%A8-testlib-h-%E5%86%99-lemon-spj/</link><pubDate>Wed, 22 May 2019 13:59:32 +0800</pubDate><guid>https://ouuan.github.io/post/%E4%BD%BF%E7%94%A8-testlib-h-%E5%86%99-lemon-spj/</guid><description>&lt;p>不用 testlib.h 是不可能写好 checker 的（逃&lt;/p></description></item><item><title>随机生成图片展示</title><link>https://ouuan.github.io/post/%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA/</link><pubDate>Thu, 20 Dec 2018 23:12:18 +0800</pubDate><guid>https://ouuan.github.io/post/%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA/</guid><description>传送门 源码按F12即可查看（当然也可以在 repo 里面看） 看到一个帖子里提到了一个140字符画图比赛，看到了 Martin Büttner&amp;rsquo;s code ，然后</description></item><item><title>html实现随机图片</title><link>https://ouuan.github.io/post/html%E5%AE%9E%E7%8E%B0%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87/</link><pubDate>Wed, 12 Dec 2018 23:42:17 +0800</pubDate><guid>https://ouuan.github.io/post/html%E5%AE%9E%E7%8E%B0%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87/</guid><description>注：暂时还不知道如何制作能被引用的随机图片，只能查看图片，而不能通过类似于![](图片地址)的方式查看。 demo 欢迎投稿图片：投稿地址 核心代码 &amp;lt;script type=&amp;quot;text/javascript&amp;quot;</description></item><item><title>hexo博客搭建指北</title><link>https://ouuan.github.io/post/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97/</link><pubDate>Thu, 06 Dec 2018 16:00:37 +0800</pubDate><guid>https://ouuan.github.io/post/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97/</guid><description>折腾了 $3$ 天终于把博客搭建好了&amp;hellip;本文会简单介绍一下 hexo 博客的搭建，并选取一些我自己在配置博客的过程中遇到的问题，说明一下我的解决方</description></item></channel></rss>