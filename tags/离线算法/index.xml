<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>离线算法 on ouuan的博客</title><link>https://ouuan.github.io/tags/%E7%A6%BB%E7%BA%BF%E7%AE%97%E6%B3%95/</link><description>Recent content in 离线算法 on ouuan的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 14 Feb 2020 14:50:32 +0800</lastBuildDate><atom:link href="https://ouuan.github.io/tags/%E7%A6%BB%E7%BA%BF%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>整体二分学习笔记</title><link>https://ouuan.github.io/post/parallel-binary-search/</link><pubDate>Fri, 14 Feb 2020 14:50:32 +0800</pubDate><guid>https://ouuan.github.io/post/parallel-binary-search/</guid><description>&lt;p>整体二分是一种离线算法，可以将一个修改同时作用于多个询问，从而减少不必要的开销，将二分答案从单次询问扩展到多次询问。&lt;/p>
&lt;p>在一些题目中，相比与其它解法，整体二分可以避免复杂的数据结构，降低代码难度与空间复杂度。&lt;/p></description></item><item><title>CF878E Numbers on the blackboard（贪心，并查集）</title><link>https://ouuan.github.io/post/cf878e-numbers-on-the-blackboard%E8%B4%AA%E5%BF%83%E5%B9%B6%E6%9F%A5%E9%9B%86/</link><pubDate>Tue, 08 Oct 2019 20:49:18 +0800</pubDate><guid>https://ouuan.github.io/post/cf878e-numbers-on-the-blackboard%E8%B4%AA%E5%BF%83%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid><description>&lt;h2 id="题目链接">题目链接&lt;/h2>
&lt;p>&lt;a href="https://codeforces.com/contest/878/problem/E">CF&lt;/a>&lt;/p>
&lt;h2 id="题意简述">题意简述&lt;/h2>
&lt;p>对于一个数列，每次操作可以将相邻的两个数 $x$ 和 $y$ 合并成一个数 $x+2y$，定义一个数列的权值为进行操作直至只剩一个数能得到的最大值。&lt;/p>
&lt;p>多组询问，每次给定一个区间，求这个区间的权值。&lt;/p>
&lt;p>数列值域 $-10^9\sim10^9$，数列长度和询问个数不超过 $10^5$。&lt;/p></description></item><item><title>cdq分治学习笔记</title><link>https://ouuan.github.io/post/cdq%E5%88%86%E6%B2%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 26 Mar 2019 18:49:44 +0800</pubDate><guid>https://ouuan.github.io/post/cdq%E5%88%86%E6%B2%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid><description>&lt;p>cdq分治也是咕了好久了..最近总算把它学了。&lt;/p>
&lt;p>&lt;del>cdq分治是一种离线算法，可以代替一些复杂的数据结构，降低代码难度，减小常数。&lt;/del>废话大家都知道。&lt;/p></description></item><item><title>莫队、带修莫队、树上莫队详解</title><link>https://ouuan.github.io/post/%E8%8E%AB%E9%98%9F%E5%B8%A6%E4%BF%AE%E8%8E%AB%E9%98%9F%E6%A0%91%E4%B8%8A%E8%8E%AB%E9%98%9F%E8%AF%A6%E8%A7%A3/</link><pubDate>Sun, 30 Sep 2018 17:19:58 +0800</pubDate><guid>https://ouuan.github.io/post/%E8%8E%AB%E9%98%9F%E5%B8%A6%E4%BF%AE%E8%8E%AB%E9%98%9F%E6%A0%91%E4%B8%8A%E8%8E%AB%E9%98%9F%E8%AF%A6%E8%A7%A3/</guid><description>这几天学习了莫队算法，试着写一篇比较详细的莫队教程吧&amp;hellip; 普通莫队 简介 莫队是一种基于分块思想的离线算法，用于解决区间问题，适用范围</description></item></channel></rss>