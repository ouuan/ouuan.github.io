<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TypeScript on ouuan的博客</title><link>https://ouuan.github.io/tags/typescript/</link><description>Recent content in TypeScript on ouuan的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 22 Aug 2021 12:28:25 +0800</lastBuildDate><atom:link href="https://ouuan.github.io/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>TypeScript 中子类型判定的基本原则，特例，以及相关操作</title><link>https://ouuan.github.io/post/typescript-subtype-principle-exceptions-and-operations/</link><pubDate>Sun, 22 Aug 2021 12:28:25 +0800</pubDate><guid>https://ouuan.github.io/post/typescript-subtype-principle-exceptions-and-operations/</guid><description>&lt;p>类型是 TypeScript 中的基本概念，而两个类型之间是否存在子类型关系则决定了许多操作是否合法。多数类型的相关规则是非常符合直觉的，有些规则是符合逻辑而不一定符合直觉的，而少数规则则是例外。本文试图归纳一下子类型判定的基本原则，特例，以及相关操作。&lt;/p></description></item></channel></rss>