<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>贪心 on ouuan的博客</title><link>https://ouuan.github.io/tags/%E8%B4%AA%E5%BF%83/</link><description>Recent content in 贪心 on ouuan的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 06 Dec 2019 19:24:14 +0800</lastBuildDate><atom:link href="https://ouuan.github.io/tags/%E8%B4%AA%E5%BF%83/index.xml" rel="self" type="application/rss+xml"/><item><title>CF786C Till I Collapse（根号分治，二分答案 / 主席树，调和级数）</title><link>https://ouuan.github.io/post/cf786c-till-i-collapse%E6%A0%B9%E5%8F%B7%E5%88%86%E6%B2%BB%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88-%E4%B8%BB%E5%B8%AD%E6%A0%91%E8%B0%83%E5%92%8C%E7%BA%A7%E6%95%B0/</link><pubDate>Fri, 06 Dec 2019 19:24:14 +0800</pubDate><guid>https://ouuan.github.io/post/cf786c-till-i-collapse%E6%A0%B9%E5%8F%B7%E5%88%86%E6%B2%BB%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88-%E4%B8%BB%E5%B8%AD%E6%A0%91%E8%B0%83%E5%92%8C%E7%BA%A7%E6%95%B0/</guid><description>&lt;h2 id="题目链接">题目链接&lt;/h2>
&lt;p>&lt;a href="https://codeforces.com/contest/786/problem/C">CF&lt;/a>&lt;/p>
&lt;h2 id="题意简述">题意简述&lt;/h2>
&lt;p>给你一个长为 $n$ 的数列，对于 $1\le k\le n$ 的所有整数 $k$，求出这个问题的答案：将数列划分成若干连续段，每段内最多有 $k$ 个 &lt;strong>不同&lt;/strong> 的数，至少要划分成几段？&lt;/p>
&lt;p>$n\le 10^5$ 。&lt;/p></description></item><item><title>CF3D Least Cost Bracket Sequence（贪心）</title><link>https://ouuan.github.io/post/cf3d-least-cost-bracket-sequence%E8%B4%AA%E5%BF%83/</link><pubDate>Wed, 16 Oct 2019 21:50:44 +0800</pubDate><guid>https://ouuan.github.io/post/cf3d-least-cost-bracket-sequence%E8%B4%AA%E5%BF%83/</guid><description>&lt;h2 id="题目链接">题目链接&lt;/h2>
&lt;p>&lt;a href="https://codeforces.com/contest/3/problem/D">CF&lt;/a>&lt;/p>
&lt;h2 id="题意简述">题意简述&lt;/h2>
&lt;p>有一个长为 $n$ 的括号序列，其中一些位置是问号，每个问号替换成左括号或替换成右括号各有给定的代价，判断是否能够构造出一个合法的括号序列，如果可以，求出最小代价。&lt;/p>
&lt;p>$n\le 5\cdot 10^4$（实际上可以大很多）。&lt;/p></description></item><item><title>gym102268D Dates（贪心，二分图匹配，线段树）</title><link>https://ouuan.github.io/post/gym102268d-dates%E8%B4%AA%E5%BF%83%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D%E7%BA%BF%E6%AE%B5%E6%A0%91/</link><pubDate>Fri, 11 Oct 2019 11:30:32 +0800</pubDate><guid>https://ouuan.github.io/post/gym102268d-dates%E8%B4%AA%E5%BF%83%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D%E7%BA%BF%E6%AE%B5%E6%A0%91/</guid><description>&lt;h2 id="题目链接">题目链接&lt;/h2>
&lt;p>&lt;a href="https://codeforces.com/gym/102268/problem/D">CF&lt;/a>&lt;/p>
&lt;h2 id="题意简述">题意简述&lt;/h2>
&lt;p>给你一张二分图：左边 $t$ 个位置，第 $i$ 个位置上有 $a_i$ 个点；右边 $n$ 个带权的点，第 $i$ 个点与位置在 $[l_i, r_i]$ 之间的所有左边的点有连边；匹配权值为匹配中右边点的权值之和；求最大权匹配。&lt;/p>
&lt;p>$1\le n,t\le 3\cdot 10^5$，保证 $l_i\le l_{i+1}$, $r_i\le r_{i+1}$。&lt;/p></description></item><item><title>CF878E Numbers on the blackboard（贪心，并查集）</title><link>https://ouuan.github.io/post/cf878e-numbers-on-the-blackboard%E8%B4%AA%E5%BF%83%E5%B9%B6%E6%9F%A5%E9%9B%86/</link><pubDate>Tue, 08 Oct 2019 20:49:18 +0800</pubDate><guid>https://ouuan.github.io/post/cf878e-numbers-on-the-blackboard%E8%B4%AA%E5%BF%83%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid><description>&lt;h2 id="题目链接">题目链接&lt;/h2>
&lt;p>&lt;a href="https://codeforces.com/contest/878/problem/E">CF&lt;/a>&lt;/p>
&lt;h2 id="题意简述">题意简述&lt;/h2>
&lt;p>对于一个数列，每次操作可以将相邻的两个数 $x$ 和 $y$ 合并成一个数 $x+2y$，定义一个数列的权值为进行操作直至只剩一个数能得到的最大值。&lt;/p>
&lt;p>多组询问，每次给定一个区间，求这个区间的权值。&lt;/p>
&lt;p>数列值域 $-10^9\sim10^9$，数列长度和询问个数不超过 $10^5$。&lt;/p></description></item><item><title>BJOI2019 删数（贪心，线段树）</title><link>https://ouuan.github.io/post/bjoi2019-%E5%88%A0%E6%95%B0%E8%B4%AA%E5%BF%83%E7%BA%BF%E6%AE%B5%E6%A0%91/</link><pubDate>Mon, 16 Sep 2019 11:11:10 +0800</pubDate><guid>https://ouuan.github.io/post/bjoi2019-%E5%88%A0%E6%95%B0%E8%B4%AA%E5%BF%83%E7%BA%BF%E6%AE%B5%E6%A0%91/</guid><description>&lt;h2 id="题目链接">题目链接&lt;/h2>
&lt;p>&lt;a href="https://www.luogu.org/problem/P5324">洛谷&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://loj.ac/problem/3094">LOJ&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.lydsy.com/JudgeOnline/problem.php?id=5528">BZOJ&lt;/a>&lt;/p>
&lt;h2 id="题意简述">题意简述&lt;/h2>
&lt;p>一个数列是“可删除的”，当且仅当可以通过这种操作将其清空：将数列中等于这个数列长度的数删去。&lt;/p>
&lt;p>如，$[1, 2, 4, 4]$ 是“可删除的”，第一次操作删成 $[1, 2]$，第二次操作删成 $[1]$，第三次操作清空。&lt;/p>
&lt;p>定义一个数列的权值为至少需要进行的单点修改数目，使得这个数列变成“可删除的”。&lt;/p>
&lt;p>现在给你一个数列 $a_{1..n}$，以及 $m$ 次修改操作，你需要在每次修改后回答这个数列的权值。&lt;/p>
&lt;p>修改操作有三种：&lt;/p>
&lt;ol>
&lt;li>单点修改。&lt;/li>
&lt;li>全局加一。&lt;/li>
&lt;li>全局减一。&lt;/li>
&lt;/ol>
&lt;p>$1\le n,m\le 150000$，数列初始值以及单点修改成的值在 $[1,n]$ 内，但全局修改可能使数列中的元素超过这个范围。&lt;/p></description></item><item><title>AGC007F Shik and Copying String（贪心，实现）</title><link>https://ouuan.github.io/post/agc007f-shik-and-copying-string%E8%B4%AA%E5%BF%83%E5%AE%9E%E7%8E%B0/</link><pubDate>Fri, 16 Aug 2019 23:34:10 +0800</pubDate><guid>https://ouuan.github.io/post/agc007f-shik-and-copying-string%E8%B4%AA%E5%BF%83%E5%AE%9E%E7%8E%B0/</guid><description>&lt;h2 id="题目链接">题目链接&lt;/h2>
&lt;p>&lt;a href="https://www.luogu.org/problem/AT2173">洛谷&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://atcoder.jp/contests/agc007/tasks/agc007_f">AtCoder&lt;/a>&lt;/p>
&lt;h2 id="题意简述">题意简述&lt;/h2>
&lt;p>给你初始串 $S_0$ 和目标串 $T$，每一步操作可以将当前串 $S_i$ 变成 $S_{i+1}$，其中：&lt;/p>
&lt;p>$$S_{i+1}[j]=\begin{cases}S_i[1]&amp;amp;j=1\\S_i[j]\text{ 或 }S_{i+1}[j-1]&amp;amp;j&amp;gt;1\end{cases}$$&lt;/p>
&lt;p>求最少需要几次操作可以将当前串变为 $T$。&lt;/p>
&lt;p>串长 $10^6​$。&lt;/p></description></item><item><title>BZOJ2460 [BJWC2011]元素（线性基，贪心）</title><link>https://ouuan.github.io/post/bzoj2460-bjwc2011-%E5%85%83%E7%B4%A0%E7%BA%BF%E6%80%A7%E5%9F%BA%E8%B4%AA%E5%BF%83/</link><pubDate>Fri, 14 Jun 2019 22:00:27 +0800</pubDate><guid>https://ouuan.github.io/post/bzoj2460-bjwc2011-%E5%85%83%E7%B4%A0%E7%BA%BF%E6%80%A7%E5%9F%BA%E8%B4%AA%E5%BF%83/</guid><description>&lt;h2 id="题目链接">题目链接&lt;/h2>
&lt;p>&lt;a href="https://www.luogu.org/problemnew/show/P4570">洛谷&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://darkbzoj.tk/problem/2460">darkbzoj&lt;/a>&lt;/p>
&lt;h2 id="题意简述">题意简述&lt;/h2>
&lt;p>给你 $n$ 个带权值的数（数和权值是两个东西），求一个权值最大的异或线性无关子集，即取这个子集的任意一个非空子集，异或和都不为零。&lt;/p>
&lt;p>原题 $n\le1000$，实际上可以轻松 $n\le10^5$。数 $10^{18}$，权值 $10^4$。&lt;/p></description></item><item><title>浅谈邻项交换排序的应用以及需要注意的问题</title><link>https://ouuan.github.io/post/%E6%B5%85%E8%B0%88%E9%82%BB%E9%A1%B9%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8%E4%BB%A5%E5%8F%8A%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 18 Nov 2018 08:05:50 +0800</pubDate><guid>https://ouuan.github.io/post/%E6%B5%85%E8%B0%88%E9%82%BB%E9%A1%B9%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8%E4%BB%A5%E5%8F%8A%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>浅谈邻项交换排序的应用以及需要注意的问题.pdf 邻项交换排序是一种常见的贪心算法，通过比较两个相邻元素交换前后的优劣对整个序列进行排序，从而</description></item></channel></rss>